{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "type": "String"
        },
        "Commercial-RG-Name": {
            "type": "String",
            "metadata": {
                "displayName": "Commerical Resource Group Name for Sentinel"
            }
        },
        "CommercialAppid": {
            "type": "String"
        },
        "CommercialSubID": {
            "type": "String"
        },
        "CommercialTenantId": {
            "type": "String"
        },
        "sentinelname": {
            "type": "String"
        }
    },
    "variables": {
        "SentinelConnectionName": "MSSentinelGov",
        "Keyvaultconnectionname": "Keyvault"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('SentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('SentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Keyvaultconnectionname')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('Keyvaultconnectionname')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "usgovvirginia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections',variables('SentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections',variables('Keyvaultconnectionname'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "laCommercial-RG-Name": {
                            "defaultValue": "[parameters('Commercial-RG-Name')]",
                            "type": "String"
                        },
                        "laCommercialAppid": {
                            "defaultValue": "[parameters('CommercialAppid')]",
                            "type": "String"
                        },
                        "laCommercialSubID": {
                            "defaultValue": "[parameters('CommercialSubID')]",
                            "type": "String"
                        },
                        "laCommercialTenantId": {
                            "defaultValue": "[parameters('CommercialTenantId')]",
                            "type": "String"
                        },
                        "lasentinelname": {
                            "defaultValue": "[parameters('sentinelname')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "HTTP_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>ComIncident:@{body('Parse_JSON')?['id']}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "HTTP_2": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.azure.com",
                                            "authority": "https://login.microsoftonline.com",
                                            "clientId": "@parameters('laCommercialAppid')",
                                            "secret": "@body('Get_secret')?['value']",
                                            "tenant": "@parameters('laCommercialTenantId')",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": "GovID: @{body('Parse_JSON')?['id']}"
                                            }
                                        },
                                        "method": "PUT",
                                        "uri": "https://management.azure.com/subscriptions/@{parameters('laCommercialSubID')}/resourceGroups/@{parameters('laCommercial-RG-Name')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('lasentinelname')}/providers/Microsoft.SecurityInsights/incidents/@{body('Parse_JSON')?['name']}/comments/@{guid()}?api-version=2021-10-01"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "etag": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "properties": {
                                                    "properties": {
                                                        "additionalData": {
                                                            "properties": {
                                                                "alertProductNames": {
                                                                    "type": "array"
                                                                },
                                                                "alertsCount": {
                                                                    "type": "integer"
                                                                },
                                                                "bookmarksCount": {
                                                                    "type": "integer"
                                                                },
                                                                "commentsCount": {
                                                                    "type": "integer"
                                                                },
                                                                "tactics": {
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "createdTimeUtc": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "incidentNumber": {
                                                            "type": "integer"
                                                        },
                                                        "incidentUrl": {
                                                            "type": "string"
                                                        },
                                                        "labels": {
                                                            "type": "array"
                                                        },
                                                        "lastModifiedTimeUtc": {
                                                            "type": "string"
                                                        },
                                                        "owner": {
                                                            "properties": {
                                                                "assignedTo": {},
                                                                "email": {},
                                                                "objectId": {},
                                                                "userPrincipalName": {}
                                                            },
                                                            "type": "object"
                                                        },
                                                        "relatedAnalyticRuleIds": {
                                                            "type": "array"
                                                        },
                                                        "severity": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@outputs('HTTP')['statusCode']",
                                            201
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Get_secret": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('com-sentinel')}/value"
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com",
                                    "authority": "https://login.microsoftonline.com",
                                    "clientId": "@parameters('laCommercialAppid')",
                                    "secret": "@body('Get_secret')?['value']",
                                    "tenant": "@parameters('laCommercialTenantId')",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                    "properties": {
                                        "description": "@{triggerBody()?['object']?['properties']?['description']}",
                                        "severity": "@{triggerBody()?['object']?['properties']?['severity']}",
                                        "status": "@{triggerBody()?['object']?['properties']?['status']}",
                                        "title": "Gov - @{triggerBody()?['object']?['properties']?['title']}"
                                    }
                                },
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{parameters('laCommercialSubID')}/resourceGroups/@{parameters('laCommercial-RG-Name')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('lasentinelname')}/providers/Microsoft.SecurityInsights/incidents/@{guid()}?api-version=2021-10-01"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections',variables('SentinelConnectionName'))]",
                                "connectionName": "azuresentinel-Send-to-Commercial",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Keyvaultconnectionname'))]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}